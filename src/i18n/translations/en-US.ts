export const enUS = {
  webhook: {
    enableWebhook: "Enable Webhook Notifications",
    enableWebhookDescription: "Receive transaction notifications via webhook",
    webhookUrl: "Webhook URL",
    webhookUrlPlaceholder: "https://example.com/webhook",
    webhookUrlDescription: "URL to receive transaction notifications",
    webhookUrlRequired: "Webhook URL is required when webhook is enabled",
    webhookUrlInvalid: "Webhook URL must be a valid URL",
    verificationCode: "Verification Code",
    verificationCodePlaceholder: "Enter verification code",
    verificationCodeDescription: "Code used to authenticate webhook requests",
    verificationHeaderName: "Verification Header Name",
    verificationHeaderPlaceholder: "X-Webhook-Verification",
    verificationHeaderDescription:
      "Custom HTTP header name for the verification code",
    generateNewCode: "Generate new verification code",
    resetToDefault: "Reset to default header name",
    codeGenerated: "New verification code generated",
    headerReset: "Header name reset to default",
    resending: "Resending...",
    resendSuccess: "Webhook resent successfully",
    resendFailed: "Failed to resend webhook",
    history: "Webhook History",
    noHistory: "No webhook history available",
    status: "Status",
    sentAt: "Sent At",
    response: "Response",
    request: "Request",
    headers: "Headers",
    body: "Body",
    logs: "Webhook Logs",
    title: "Webhook",
    notConfigured: "Not Configured",
    url: "URL",
    header: "Header",
    code: "Code",
    clickToCopyWebhookUrl: "Click to copy webhook URL",
    webhookUrlCopiedToClipboard: "Webhook URL copied to clipboard",
    failedToCopyWebhookUrl: "Failed to copy webhook URL",
    clickToCopyHeaderName: "Click to copy header name",
    headerNameCopiedToClipboard: "Header name copied to clipboard",
    failedToCopyHeaderName: "Failed to copy header name",
    clickToCopyVerificationCode: "Click to copy verification code",
    verificationCodeCopiedToClipboard: "Verification code copied to clipboard",
    failedToCopyVerificationCode: "Failed to copy verification code",
    generateVerificationCode: "Generate new verification code",
    headerNameReset: "Reset to default header name",
    verificationCodeGenerated: "New verification code generated",
    headerNameDescription: "Custom HTTP header name for the verification code",
    headerNamePlaceholder: "X-Webhook-Verification",
    sent: "Sent",
    pending: "Pending",
    success: "Success",
    failed: "Failed",
    back: "Back",
  },
  common: {
    language: "Language",
    theme: "Theme",
    loading: "Loading...",
    error: "Error",
    success: "Success",
    cancel: "Cancel",
    saving: "Saving...",
    save: "Save",
    delete: "Delete",
    edit: "Edit",
    add: "Add",
    search: "Search",
    filter: "Filter",
    logout: "Log out",
    settings: "Settings",
    copy: "Copy",
    copied: "Copied",
    copyToClipboard: "Copy to clipboard",
    close: "Close",
    open: "Open",
    view: "View",
    refresh: "Refresh",
    reset: "Reset",
    generate: "Generate",
    optional: "Optional",
    required: "Required",
    enabled: "Enabled",
    disabled: "Disabled",
    yes: "Yes",
    no: "No",
    confirm: "Confirm",
    back: "Back",
    next: "Next",
    previous: "Previous",
    submit: "Submit",
    create: "Create",
    update: "Update",
    platform: "Platform",
    status: "Status",
  },
  nav: {
    dashboard: "Dashboard",
    addresses: "Addresses",
    transactions: "Transactions",
    analytics: "Analytics",
  },
  dashboard: {
    title: "Dashboard",
    welcome: "Welcome back",
    overview: "Overview",
    totalBalance: "Total Balance",
    totalAddresses: "Total Addresses",
    recentTransactions: "Recent Transactions",
    portfolioValue: "Portfolio Value",
  },
  addresses: {
    title: "Addresses",
    addAddress: "Add Address",
    addNewAddress: "Add New Address",
    addNewAddressDescription:
      "Add a new cryptocurrency address to your collection",
    createAddress: "Create New Address",
    addressName: "Address Name",
    addressNamePlaceholder: "Enter a name for this address",
    walletAddress: "Wallet Address",
    walletAddressPlaceholder: "Enter wallet address",
    enterAddress: "Enter address",
    blockchain: "Blockchain",
    selectBlockchain: "Select a blockchain",
    balance: "Balance",
    lastActivity: "Last Activity",
    noAddresses: "No addresses yet",
    noAddressesDescription: "Add your first crypto address to start tracking",
    deleteConfirm: "Are you sure you want to delete this address?",
    invalidAddress: "Invalid address format",
    addressAdded: "Address added successfully",
    addressDeleted: "Address deleted successfully",
    addressUpdated: "Address updated successfully",
    label: "Label",
    labelPlaceholder: "e.g., Main Wallet, Exchange",
    labelDescription: "Optional label to identify this address",
    token: "Token",
    network: "Network",
    address: "Address",
    invalidTokenNetworkCombination:
      "{token} is not supported on {network} network",
    invalidAddressFormat:
      "Invalid {token} address format for {network} network",
    adding: "Adding...",
    updating: "Updating...",
    edit: "Edit",
    delete: "Delete",
    actions: "Actions",
    editAddress: "Edit Address",
    deleteAddress: "Delete Address",
    confirmDelete: "Confirm Delete",
    cancelDelete: "Cancel",
    failedToAdd: "Failed to add address",
    failedToUpdate: "Failed to update address",
    failedToDelete: "Failed to delete address",
    monitoring: "Monitoring",
    notConfigured: "Not Configured",
    url: "URL",
    header: "Header",
    code: "Code",
    view: "View",
    active: "Active",
    inactive: "Inactive",
    clickToCopyAddress: "Click to copy address",
    addressCopiedToClipboard: "Address copied to clipboard",
    failedToCopyAddress: "Failed to copy address",
    openMenu: "Open menu",
    monitoringStopped: "Monitoring stopped",
    monitoringStarted: "Monitoring started",
    failedToToggleMonitoring: "Failed to toggle monitoring",
    stop: "Stop",
    start: "Start",
    stopMonitoring: "Stop Monitoring",
    startMonitoring: "Start Monitoring",
    failedToStopMonitoring: "Failed to stop monitoring",
    failedToStartMonitoring: "Failed to start monitoring",
    failedToGet: "Failed to get address",
    failedToList: "Failed to get address list",
    failedToGetOne: "Failed to get address",
    failedToCreate: "Failed to create address",
    failedToUpdateOne: "Failed to update address",
    failedToDeleteOne: "Failed to delete address",
    failedToToggleListening: "Failed to toggle listening",
    editAddressDescription:
      "Update the label and webhook settings for this address",
  },
  transactions: {
    title: "Transactions",
    noTransactions: "No transactions found",
    from: "From",
    to: "To",
    amount: "Amount",
    fee: "Fee",
    date: "Date",
    status: "Status",
    hash: "Transaction Hash",
    block: "Block",
    confirmations: "Confirmations",
    viewTransactions: "View Transactions",
    transactionHistory: "Transaction History",
    incoming: "Incoming",
    outgoing: "Outgoing",
    pending: "Pending",
    confirmed: "Confirmed",
    failed: "Failed",
    resendWebhook: "Resend Webhook",
    webhookHistory: "Webhook History",
    viewWebhookHistory: "View History",
    transactionId: "Transaction ID",
    type: "Type",
    webhook: "Webhook",
    received: "Received",
    sent: "Sent",
    clickToCopyTransactionId: "Click to copy transaction ID",
    transactionIdCopiedToClipboard: "Transaction ID copied to clipboard",
    failedToCopyTransactionId: "Failed to copy transaction ID",
    clickToCopyAddress: "Click to copy address",
    addressCopiedToClipboard: "Address copied to clipboard",
    failedToCopyAddress: "Failed to copy address",
    successful: "successful",
    noWebhookAttempts: "No webhook attempts",
    loadingLogs: "Loading logs...",
    webhookLogsWillAppearHere: "Webhook logs will appear here",
    attempt: "Attempt",
    webhookResentSuccessfully: "Webhook resent successfully",
    failedToResendWebhook: "Failed to resend webhook",
    noLogSelected: "No log selected",
    selectLogToViewDetails:
      "Select a webhook attempt from the list to view detailed information",
    endpoint: "Endpoint",
    openUrl: "Open URL",
    requestPayload: "Request Payload",
    responseBody: "Response Body",
    errorDetails: "Error Details",
  },
  auth: {
    signIn: "Sign In",
    signUp: "Sign Up",
    email: "Email",
    emailPlaceholder: "Enter your email",
    password: "Password",
    passwordPlaceholder: "Enter your password",
    confirmPassword: "Confirm Password",
    confirmPasswordPlaceholder: "Confirm your password",
    forgotPassword: "Forgot password?",
    rememberMe: "Remember me",
    alreadyHaveAccount: "Already have an account?",
    dontHaveAccount: "Don't have an account?",
    signInError: "Invalid email or password",
    signUpError: "Failed to create account",
    passwordMismatch: "Passwords do not match",
  },
  settings: {
    title: "Settings",
    profile: "Profile",
    account: "Account",
    appearance: "Appearance",
    notifications: "Notifications",
    privacy: "Privacy",
    security: "Security",
    language: "Language",
    theme: "Theme",
    darkMode: "Dark Mode",
    lightMode: "Light Mode",
    systemMode: "System",
  },
  user: {
    profile: "Profile",
    account: "Account",
    settings: "Settings",
    help: "Help",
    logout: "Log out",
    upgrade: "Upgrade to Pro",
    billing: "Billing",
  },
  blockchains: {
    ethereum: "Ethereum",
    bitcoin: "Bitcoin",
    polygon: "Polygon",
    arbitrum: "Arbitrum",
    optimism: "Optimism",
    avalanche: "Avalanche",
    bnb: "BNB Chain",
  },
  errors: {
    generic: "Something went wrong",
    network: "Network error",
    notFound: "Not found",
    unauthorized: "Unauthorized",
    forbidden: "Forbidden",
    serverError: "Server error",
    tryAgain: "Please try again",
  },
};
